name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Install terraform-docs
        run: |
          curl -sSLo ./terraform-docs.tar.gz https://github.com/terraform-docs/terraform-docs/releases/download/v0.16.0/terraform-docs-v0.16.0-linux-amd64.tar.gz
          tar -xzf terraform-docs.tar.gz
          chmod +x terraform-docs
          sudo mv terraform-docs /usr/local/bin/

      - name: Run tests
        run: go test -v ./...

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Build
        run: go build -v .

      - name: Build for all platforms
        run: |
          GOOS=linux GOARCH=amd64 go build -o terraform-docs-extended_linux_amd64
          GOOS=darwin GOARCH=amd64 go build -o terraform-docs-extended_darwin_amd64
          GOOS=windows GOARCH=amd64 go build -o terraform-docs-extended_windows_amd64.exe

      # Upload artifacts as job summary instead of using the upload-artifact action
      - name: Archive artifacts locally
        run: |
          mkdir -p artifacts
          cp terraform-docs-extended_linux_amd64 artifacts/
          cp terraform-docs-extended_darwin_amd64 artifacts/
          cp terraform-docs-extended_windows_amd64.exe artifacts/
          echo "## Build artifacts" >> $GITHUB_STEP_SUMMARY
          echo "Build completed successfully. Binaries are available in the artifacts directory:" >> $GITHUB_STEP_SUMMARY
          echo "- terraform-docs-extended_linux_amd64" >> $GITHUB_STEP_SUMMARY
          echo "- terraform-docs-extended_darwin_amd64" >> $GITHUB_STEP_SUMMARY
          echo "- terraform-docs-extended_windows_amd64.exe" >> $GITHUB_STEP_SUMMARY

  # Simplified release job that doesn't depend on artifacts from previous job
  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
          
      - name: Build for all platforms
        run: |
          GOOS=linux GOARCH=amd64 go build -o terraform-docs-extended_linux_amd64
          GOOS=darwin GOARCH=amd64 go build -o terraform-docs-extended_darwin_amd64
          GOOS=windows GOARCH=amd64 go build -o terraform-docs-extended_windows_amd64.exe

      - name: Create Release
        id: create_release
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          RELEASE_NAME="Release ${TAG_NAME}"
          
          # Create a release with GitHub CLI
          gh release create "$TAG_NAME" \
            --title "$RELEASE_NAME" \
            --notes "Release $TAG_NAME" \
            terraform-docs-extended_linux_amd64 \
            terraform-docs-extended_darwin_amd64 \
            terraform-docs-extended_windows_amd64.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}